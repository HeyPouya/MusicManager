apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

//apply plugin: 'io.fabric'

//apply plugin: 'com.google.firebase.firebase-perf'


ext {
    //Important library versions :
    rxjava_Version = "2.2.12"
    lifecycle_version = "2.1.0"
    appcompat_version = "1.1.0"
    support_version = "1.0.0"
    retrofit_version = '2.6.2'
    dagger_version = '2.24'
    room_version = "2.1.0"

    //Application versioning
    versionMajor = 1
    versionMinor = 0
    versionPatch = 0
    versionClassifier = "BETA"
    isBeta = false
}

private Integer generateVersionCode() {
    return ext.versionMajor * 100 + ext.versionMinor * 10 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"

    if (ext.isBeta) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName

}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "ir.heydarii.musicmanager"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Support
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$appcompat_version"
    implementation "androidx.cardview:cardview:$support_version"
    implementation "androidx.recyclerview:recyclerview:$support_version"
    implementation "com.google.android.material:material:$support_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //REST
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.0'

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_Version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //LiveData and ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //Logger
    implementation 'com.orhanobut:logger:2.2.0'

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    //lottie
    implementation 'com.airbnb.android:lottie:3.0.7'

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

//    //Firebase
//    implementation 'com.google.firebase:firebase-analytics:17.2.0'
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
//    implementation 'com.google.firebase:firebase-perf:19.0.0'



}

//apply plugin: 'com.google.gms.google-services'
